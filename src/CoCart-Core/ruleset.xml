<?xml version="1.0"?>
<ruleset name="CoCart Core">
	<description>CoCart Core coding standards.</description>

	<!-- Include all of our custom sniffs -->
	<rule ref="CoCart" />

	<!-- PHPCompatibility -->
	<rule ref="PHPCompatibilityWP" />

	<!-- WordPress -->
	<rule ref="WordPress">
		<exclude name="WordPress.DB.DirectDatabaseQuery.NoCaching" />
		<exclude name="WordPress.DB.DirectDatabaseQuery.DirectQuery" />
		<exclude name="WordPress.DB.DirectDatabaseQuery.SchemaChange" />
	</rule>

	<rule ref="WordPress.Security.ValidatedSanitizedInput">
		<properties>
			<property name="customSanitizingFunctions" type="array" value="wc_clean,wc_sanitize_tooltip,wc_format_decimal,wc_stock_amount,wc_sanitize_permalink,wc_sanitize_textarea" />
		</properties>
	</rule>

	<rule ref="WordPress.Security.EscapeOutput">
		<properties>
			<property name="customEscapingFunctions" type="array" value="wc_help_tip,wc_kses_notice" />
		</properties>
	</rule>

	<rule ref="Squiz.Commenting">
		<exclude name="Squiz.Commenting.LongConditionClosingComment" />
		<exclude name="Squiz.Commenting.PostStatementComment" />
		<exclude name="Squiz.Commenting.ClassComment.Missing" />
	</rule>

	<rule ref="Squiz.PHP.CommentedOutCode.Found">
		<severity>0</severity>
	</rule>

	<rule ref="PEAR.Functions.FunctionCallSignature">
		<exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket" />
		<exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine" />
		<exclude name="PEAR.Functions.FunctionCallSignature.MultipleArguments" />
	</rule>

	<rule ref="PEAR.NamingConventions.ValidClassName.Invalid">
		<severity>0</severity>
	</rule>

</ruleset>
